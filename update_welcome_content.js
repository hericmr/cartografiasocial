const { createClient } = require('@supabase/supabase-js');

// Configura√ß√£o do Supabase
const supabaseUrl = 'https://kbekziboncpvjqffmhlx.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtiZWt6aWJvbmNwdmpxZmZtaGx4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEyNjc2OTYsImV4cCI6MjA1Njg0MzY5Nn0.FTtiCL3VKLdrcR9aKs3tF6AwgdoyKo604rMBdpWRLko';

const supabase = createClient(supabaseUrl, supabaseKey);

async function updateWelcomeContent() {
  console.log('üîÑ Atualizando conte√∫do do painel de boas-vindas...\n');

  const newContent = `# Sobre o site

Esta √© uma **cartografia social** que busca mapear territorialidades, lutas e conquistas dos movimentos sociais e da popula√ß√£o na cidade de Santos. O mapa destaca a presen√ßa de equipamentos sociais, culturais, religiosos, pol√≠ticos, educacionais, como escolas, unidades de sa√∫de, assist√™ncia social, espa√ßos culturais e de lazer, al√©m de comunidades e locais carregados de mem√≥ria e hist√≥ria.

## Os pontos est√£o representados por:

- **üéØ Lazer**: equipamentos sociais, culturais e de lazer
- **üè• Assist√™ncia**: unidades de assist√™ncia social e sa√∫de  
- **üèõÔ∏è Hist√≥ricos**: lugares hist√≥ricos e de mem√≥ria
- **üèòÔ∏è Comunidades**: territ√≥rios de comunidades
- **üéì Educa√ß√£o**: escolas e unidades de ensino
- **‚õ™ Religi√£o**: estabelecimentos religiosos

## Hist√≥rias mapeadas:

Entre os elementos mapeados, est√£o hist√≥rias relacionadas √† **escravid√£o e lutas do povo negro**, √† **opress√£o e resist√™ncia √† ditadura empresarial-militar (1964-1984)**, e √†s **lutas que moldaram e continuam moldando a identidade da regi√£o**.

## Sobre os materiais:

Os materiais cartogr√°ficos e textuais dispon√≠veis aqui foram produzidos pelas(os) **estudantes de Servi√ßo Social da UNIFESP** do vespertino e noturno durante a **Unidade Curricular de Pol√≠tica Social 2**, em **2024 e 2025**.

---

### Como navegar:

1. **Clique nos marcadores** no mapa para ver informa√ß√µes detalhadas
2. **Use o menu** para acessar diferentes se√ß√µes
3. **Explore o conte√∫do** na p√°gina de cat√°logo
4. **Ou√ßa os √°udios** dispon√≠veis em cada local

*Este painel pode ser personalizado pelos administradores do sistema.*`;

  try {
    // Desativar painel atual
    console.log('1. Desativando painel atual...');
    const { error: deactivateError } = await supabase
      .from('welcome_panels')
      .update({ is_active: false })
      .eq('is_active', true);

    if (deactivateError) {
      console.log('‚ö†Ô∏è  Erro ao desativar painel atual:', deactivateError.message);
    } else {
      console.log('‚úÖ Painel atual desativado');
    }

    // Criar novo painel com conte√∫do atualizado
    console.log('\n2. Criando novo painel com conte√∫do atualizado...');
    const { data: newPanel, error: insertError } = await supabase
      .from('welcome_panels')
      .insert([{
        title: 'Sobre o site',
        content: newContent,
        is_active: true,
        theme: 'default',
        show_close_button: true,
        auto_close_seconds: null,
        display_conditions: {
          first_visit_only: true,
          show_on_mobile: true,
          show_on_desktop: true
        },
        created_by: 'admin'
      }])
      .select();

    if (insertError) {
      console.log('‚ùå Erro ao criar novo painel:', insertError.message);
      return;
    }

    console.log('‚úÖ Novo painel criado com sucesso');
    console.log(`   ID: ${newPanel[0].id}`);
    console.log(`   T√≠tulo: ${newPanel[0].title}`);
    console.log(`   Ativo: ${newPanel[0].is_active}`);

    // Verificar se est√° funcionando
    console.log('\n3. Verificando painel ativo...');
    const { data: activePanel, error: checkError } = await supabase
      .from('welcome_panels')
      .select('*')
      .eq('is_active', true)
      .order('updated_at', { ascending: false })
      .limit(1)
      .single();

    if (checkError) {
      console.log('‚ùå Erro ao verificar painel ativo:', checkError.message);
    } else {
      console.log('‚úÖ Painel ativo verificado');
      console.log(`   T√≠tulo: ${activePanel.title}`);
      console.log(`   Conte√∫do (primeiros 100 chars): ${activePanel.content.substring(0, 100)}...`);
    }

    console.log('\nüéâ Conte√∫do do painel de boas-vindas atualizado com sucesso!');

  } catch (error) {
    console.error('‚ùå Erro geral:', error);
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  updateWelcomeContent();
}

module.exports = { updateWelcomeContent };